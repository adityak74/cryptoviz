# Copyright 2020 Google, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: BuildDockerGCPRunGKE

on:
  push:
    branches:
    - main

env:
  PROJECT_ID: ${{ secrets.GCE_PROJECT }}
  DB_CONNECTON_JSON: ${{ secrets.DB_CONNECTION_SECRETS }}
  GKE_APP_NAME: wazirx-collector-app
  DOCKER_IMAGE_NAME: instance-ak-image
  DOCKER_IMAGE_VERSION: latest
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCE_SA_KEY }}
        project_id: ${{ secrets.GCE_PROJECT }}
        export_default_credentials: true

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
        
    - name: Copy SQL Credentials
      run: |-
        echo $DB_CONNECTON_JSON > ./config/config.json

    # Build the Docker image
    - name: Build
      run: |-
        docker build --tag "gcr.io/aakashgangaaspace/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION}" .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/aakashgangaaspace/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION}"

    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v0.2.0
      with:
        image: gcr.io/aakashgangaaspace/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION}
        service: ${DOCKER_IMAGE_NAME}
        credentials: ${{ secrets.GCE_SA_KEY }}
    
    - name: Deploy to GKE
      uses: google-github-actions/get-gke-credentials@main
      with:
        cluster_name:  wazirx-api-cluster
        location: us-central1-a

    # The KUBECONFIG env var is automatically exported and picked up by kubectl.
    - name: Create GKE Deployment and Display Pods
      run: |
        kubectl create deployment ${GKE_APP_NAME} --image=gcr.io/${PROJECT_ID}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION}
        kubectl scale deployment ${GKE_APP_NAME} --replicas=3
        kubectl autoscale deployment hello-app --cpu-percent=80 --min=1 --max=5
        kubectl get pods
